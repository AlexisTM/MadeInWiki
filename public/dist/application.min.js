"use strict";var ApplicationConfiguration=function(){var applicationModuleName="micd",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("chat"),ApplicationConfiguration.registerModule("components"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("suppliers"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Articles",state:"articles",type:"dropdown",isPublic:!0}),Menus.addSubMenuItem("topbar","articles",{title:"List Articles",state:"articles.list"}),Menus.addSubMenuItem("topbar","articles",{title:"Create Articles",state:"articles.create"})}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("articles",{"abstract":!0,url:"/articles",template:"<ui-view/>"}).state("articles.list",{url:"",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("articles.create",{url:"/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("articles.view",{url:"/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("articles.edit",{url:"/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$sce","$location","Authentication","Articles","Categories","AuthService",function($scope,$stateParams,$sce,$location,Authentication,Articles,Categories,AuthService){$scope.authentication=Authentication;var authorizedRoles=["admin","writer"],md=window.markdownit().use(window.markdownitEmoji).use(window.markdownitAbbr).use(window.markdownitDeflist).use(window.markdownitFootnote).use(window.markdownitMark).use(window.markdownitIns).use(window.markdownitSub).use(window.markdownitSup).use(window.markdownitContainer,"spoiler",{validate:function(params){return params.trim().match(/^spoiler\s+(.*)$/)},render:function(tokens,idx){var m=tokens[idx].info.trim().match(/^spoiler\s+(.*)$/);return 1===tokens[idx].nesting?"<details><summary>"+m[1]+"</summary>\n":"</details>\n"}});md.renderer.rules.emoji=function(token,idx){return window.twemoji.parse(token[idx].content)},$scope.categories=Categories.query(),$scope.create=function(){var article=new Articles({lang:this.lang,title:this.title,"abstract":this["abstract"],langages:this.langages,components:[null],content:this.content,files:[null]});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content="",$scope.lang="",$scope.title="",$scope["abstract"]="",$scope.langages=[null],$scope.components=[null]},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId},function(){$scope.article.contentRendered=$sce.trustAsHtml(md.render($scope.article.content)),$scope.authorized=AuthService.isAuthorized(authorizedRoles)})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("api/articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("categories").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Categories",state:"categories",type:"dropdown",isPublic:!1}),Menus.addSubMenuItem("topbar","categories",{title:"List Categories",state:"categories.list"}),Menus.addSubMenuItem("topbar","categories",{title:"Create Categories",state:"categories.create"})}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("categories",{"abstract":!0,url:"/categories",template:"<ui-view/>"}).state("categories.list",{url:"",templateUrl:"modules/categories/views/list-categories.client.view.html"}).state("categories.create",{url:"/create",templateUrl:"modules/categories/views/create-category.client.view.html"}).state("categories.view",{url:"/:categoryId",templateUrl:"modules/categories/views/view-category.client.view.html"}).state("categories.edit",{url:"/:categoryId/edit",templateUrl:"modules/categories/views/edit-category.client.view.html"})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","Authentication","Categories",function($scope,$stateParams,$location,Authentication,Categories){$scope.authentication=Authentication,$scope.create=function(){var category=new Categories({name:this.name,description:this.description});category.$save(function(response){$location.path("categories/"+response._id),$scope.name="",$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(category){if(category){category.$remove();for(var i in $scope.categories)$scope.categories[i]===category&&$scope.categories.splice(i,1)}else $scope.category.$remove(function(){$location.path("categories")})},$scope.update=function(){var category=$scope.category;category.$update(function(){$location.path("categories/"+category._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.category=Categories.get({categoryId:$stateParams.categoryId})}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("api/categories/:categoryId",{categoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat",isPublic:!1})}]),angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html"})}]),angular.module("chat").controller("ChatController",["$scope","Socket",function($scope,Socket){$scope.messages=[],Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]),angular.module("components").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Components",state:"components",type:"dropdown",isPublic:!1}),Menus.addSubMenuItem("topbar","components",{title:"List Components",state:"components.list"}),Menus.addSubMenuItem("topbar","components",{title:"Create Components",state:"components.create"})}]),angular.module("components").config(["$stateProvider",function($stateProvider){$stateProvider.state("components",{"abstract":!0,url:"/components",template:"<ui-view/>"}).state("components.list",{url:"",templateUrl:"modules/components/views/list-components.client.view.html"}).state("components.create",{url:"/create",templateUrl:"modules/components/views/create-component.client.view.html"}).state("components.view",{url:"/:componentId",templateUrl:"modules/components/views/view-component.client.view.html"}).state("components.edit",{url:"/:componentId/edit",templateUrl:"modules/components/views/edit-component.client.view.html"})}]),angular.module("components").controller("ComponentsController",["$scope","$stateParams","$location","Authentication","Components",function($scope,$stateParams,$location,Authentication,Components){$scope.authentication=Authentication,$scope.create=function(){this.categories=[null];var component=new Components({name:this.name,reference:this.reference,description:this.description,categories:this.categories});component.$save(function(response){$location.path("components/"+response._id),$scope.name="",$scope.reference="",$scope.description="",$scope.categories=[null]},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(component){if(component){component.$remove();for(var i in $scope.components)$scope.components[i]===component&&$scope.components.splice(i,1)}else $scope.component.$remove(function(){$location.path("components")})},$scope.update=function(){var component=$scope.component;component.suppliers===[]&&(component.suppliers=[null]),component.categories===[]&&(component.categories=[null]),component.images===[]&&(component.images=[null]),component.$update(function(){$location.path("components/"+component._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.components=Components.query()},$scope.findOne=function(){$scope.component=Components.get({componentId:$stateParams.componentId})}}]),angular.module("components").factory("Components",["$resource",function($resource){return $resource("api/components/:componentId",{componentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus","ThemeService",function($scope,$state,Authentication,Menus,ThemeService){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),ThemeService.loadTheme(Authentication.user.theme),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("AuthService",["Authentication",function(Authentication){this.isAuthorized=function(roles){if(!Authentication.user)return!1;if(!Authentication.user.roles)return!1;for(var i=roles.length-1;i>=0;i--)if(Authentication.user.roles.indexOf(roles[i])>-1)return!0;return!1}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(""===user&&!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",type:options.type||"item","class":options["class"],isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!0})}]),angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){Authentication.user?this.socket=io():$state.go("home"),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]),angular.module("core").service("ThemeService",["Authentication","$rootScope","$document","$q","$timeout",function(Authentication,$rootScope,$document,$q,$timeout){var defaultTheme="flatly",defaultPath="themes/",defaultExtension=".min.css",defaultIgnore="require",themes=["bootstrap","cerulean","custom","cyborg","darkly","flatly","journal","lumen","paper","readable","sandstone","simplex","slate","spacelab","superhero","united","yeti"];this.themes=themes;var loadCSS=function(href){var deferred=$q.defer(),style=$document[0].createElement("link");return style.rel="stylesheet",style.type="text/css",style.href=href,style.onload=style.onreadystatechange=function(e){$timeout(function(){deferred.resolve(e)})},style.onerror=function(e){$timeout(function(){deferred.reject(e)})},$document[0].head.appendChild(style),deferred.promise},theme=defaultTheme;void 0!==Authentication.user&&(theme=Authentication.user.theme);var currentTheme=defaultTheme,disableThemes=function(name){var links=[];links=document.getElementsByTagName("link");for(var i=links.length-1;i>=0;i--)links[i].href.indexOf(defaultPath)>-1&&(-1===links[i].href.indexOf(defaultPath+name)&&-1===links[i].href.indexOf(defaultPath+defaultIgnore)?links[i].disabled=!0:links[i].disabled=!1)},loadTheme=function(name){return-1===themes.indexOf(name)?!1:name===currentTheme?console.log("Current theme"):void loadCSS(defaultPath+name+defaultExtension).then(function(){disableThemes(name),currentTheme=name})["catch"](function(){loadTheme(defaultTheme)})};this.loadTheme=loadTheme,loadTheme(theme),$rootScope.$on("themeChange",function(e,theme){loadTheme(Authentication.user.theme)})}]),angular.module("suppliers").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Suppliers",state:"suppliers",type:"dropdown",isPublic:!1}),Menus.addSubMenuItem("topbar","suppliers",{title:"List Suppliers",state:"suppliers.list"}),Menus.addSubMenuItem("topbar","suppliers",{title:"Create Suppliers",state:"suppliers.create"})}]),angular.module("suppliers").config(["$stateProvider",function($stateProvider){$stateProvider.state("suppliers",{"abstract":!0,url:"/suppliers",template:"<ui-view/>"}).state("suppliers.list",{url:"",templateUrl:"modules/suppliers/views/list-suppliers.client.view.html"}).state("suppliers.create",{url:"/create",templateUrl:"modules/suppliers/views/create-supplier.client.view.html"}).state("suppliers.view",{url:"/:supplierId",templateUrl:"modules/suppliers/views/view-supplier.client.view.html"}).state("suppliers.edit",{url:"/:supplierId/edit",templateUrl:"modules/suppliers/views/edit-supplier.client.view.html"})}]),angular.module("suppliers").controller("SuppliersController",["$scope","$stateParams","$sce","$location","Authentication","Suppliers",function($scope,$stateParams,$sce,$location,Authentication,Suppliers){$scope.authentication=Authentication,$scope.create=function(){var supplier=new Suppliers({name:this.name,country:this.country,city:this.country,address:this.address,postcode:this.postcode,website:this.website,mail:this.mail,description:this.description});supplier.$save(function(response){$location.path("suppliers/"+response._id),$scope.name="",$scope.country="",$scope.city="",$scope.address="",$scope.postcode="",$scope.website="",$scope.mail="",$scope.description=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(supplier){if(supplier){supplier.$remove();for(var i in $scope.suppliers)$scope.suppliers[i]===supplier&&$scope.suppliers.splice(i,1)}else $scope.supplier.$remove(function(){$location.path("suppliers")})},$scope.update=function(){var supplier=$scope.supplier;supplier.$update(function(){$location.path("suppliers/"+supplier._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.suppliers=Suppliers.query()},$scope.findOne=function(){$scope.supplier=Suppliers.get({supplierId:$stateParams.supplierId})}}]),angular.module("suppliers").factory("Suppliers",["$resource",function($resource){return $resource("api/suppliers/:supplierId",{supplierId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html"}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication","$rootScope",function($scope,$http,$location,Authentication,$rootScope){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$rootScope.$emit("themeChange"),$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$rootScope.$emit("themeChange"),$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangePasswordController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]),angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication","$rootScope","ThemeService",function($scope,$http,$location,Users,Authentication,$rootScope,ThemeService){$scope.user=Authentication.user,$scope.themes=ThemeService.themes,$scope.theme=Authentication.user.theme,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response,ThemeService.loadTheme(response.theme)},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]),angular.module("users").controller("SocialAccountsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/")}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]);